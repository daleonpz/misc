
hello_world-1:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	insb   (%dx),%es:(%rdi)
  40023a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
  400241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
  400246:	78 2d                	js     400275 <_init-0x18b>
  400248:	78 38                	js     400282 <_init-0x17e>
  40024a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
  400250:	6f                   	outsl  %ds:(%rsi),(%dx)
  400251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    $0x0,%al
  400256:	00 00                	add    %al,(%rax)
  400258:	10 00                	adc    %al,(%rax)
  40025a:	00 00                	add    %al,(%rax)
  40025c:	01 00                	add    %eax,(%rax)
  40025e:	00 00                	add    %al,(%rax)
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push %rbp
  400263:	00 00                	add    %al,(%rax)
  400265:	00 00                	add    %al,(%rax)
  400267:	00 02                	add    %al,(%rdx)
  400269:	00 00                	add    %al,(%rax)
  40026b:	00 06                	add    %al,(%rsi)
  40026d:	00 00                	add    %al,(%rax)
  40026f:	00 20                	add    %ah,(%rax)
  400271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    $0x0,%al
  400276:	00 00                	add    %al,(%rax)
  400278:	14 00                	adc    $0x0,%al
  40027a:	00 00                	add    %al,(%rax)
  40027c:	03 00                	add    (%rax),%eax
  40027e:	00 00                	add    %al,(%rax)
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push %rbp
  400283:	00 39                	add    %bh,(%rcx)
  400285:	1f                   	(bad)  
  400286:	1c be                	sbb    $0xbe,%al
  400288:	e1 e9                	loope  400273 <_init-0x18d>
  40028a:	5d                   	pop    %rbp
  40028b:	f8                   	clc    
  40028c:	c6                   	(bad)  
  40028d:	14 f1                	adc    $0xf1,%al
  40028f:	bb f7 81 8c ae       	mov    $0xae8c81f7,%ebx
  400294:	f9                   	stc    
  400295:	d6                   	(bad)  
  400296:	26                   	es
  400297:	78                   	.byte 0x78

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    %eax,(%rax)
  40029a:	00 00                	add    %al,(%rax)
  40029c:	01 00                	add    %eax,(%rax)
  40029e:	00 00                	add    %al,(%rax)
  4002a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	0b 00                	or     (%rax),%eax
  4002d2:	00 00                	add    %al,(%rax)
  4002d4:	12 00                	adc    (%rax),%al
	...
  4002e6:	00 00                	add    %al,(%rax)
  4002e8:	10 00                	adc    %al,(%rax)
  4002ea:	00 00                	add    %al,(%rax)
  4002ec:	12 00                	adc    (%rax),%al
	...
  4002fe:	00 00                	add    %al,(%rax)
  400300:	17                   	(bad)  
  400301:	00 00                	add    %al,(%rax)
  400303:	00 12                	add    %dl,(%rdx)
	...
  400315:	00 00                	add    %al,(%rax)
  400317:	00 29                	add    %ch,(%rcx)
  400319:	00 00                	add    %al,(%rax)
  40031b:	00 20                	add    %ah,(%rax)
	...

Disassembly of section .dynstr:

0000000000400330 <.dynstr>:
  400330:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
  400334:	63 2e                	movslq (%rsi),%ebp
  400336:	73 6f                	jae    4003a7 <_init-0x59>
  400338:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
  40033d:	74 73                	je     4003b2 <_init-0x4e>
  40033f:	00 70 72             	add    %dh,0x72(%rax)
  400342:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
  400349:	6c                   	insb   (%dx),%es:(%rdi)
  40034a:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
  400351:	72 74                	jb     4003c7 <_init-0x39>
  400353:	5f                   	pop    %rdi
  400354:	6d                   	insl   (%dx),%es:(%rdi)
  400355:	61                   	(bad)  
  400356:	69 6e 00 5f 5f 67 6d 	imul   $0x6d675f5f,0x0(%rsi),%ebp
  40035d:	6f                   	outsl  %ds:(%rsi),(%dx)
  40035e:	6e                   	outsb  %ds:(%rsi),(%dx)
  40035f:	5f                   	pop    %rdi
  400360:	73 74                	jae    4003d6 <_init-0x2a>
  400362:	61                   	(bad)  
  400363:	72 74                	jb     4003d9 <_init-0x27>
  400365:	5f                   	pop    %rdi
  400366:	5f                   	pop    %rdi
  400367:	00 47 4c             	add    %al,0x4c(%rdi)
  40036a:	49                   	rex.WB
  40036b:	42                   	rex.X
  40036c:	43 5f                	rex.XB pop %r15
  40036e:	32 2e                	xor    (%rsi),%ch
  400370:	32 2e                	xor    (%rsi),%ch
  400372:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400374 <.gnu.version>:
  400374:	00 00                	add    %al,(%rax)
  400376:	02 00                	add    (%rax),%al
  400378:	02 00                	add    (%rax),%al
  40037a:	02 00                	add    (%rax),%al
	...

Disassembly of section .gnu.version_r:

0000000000400380 <.gnu.version_r>:
  400380:	01 00                	add    %eax,(%rax)
  400382:	01 00                	add    %eax,(%rax)
  400384:	01 00                	add    %eax,(%rax)
  400386:	00 00                	add    %al,(%rax)
  400388:	10 00                	adc    %al,(%rax)
  40038a:	00 00                	add    %al,(%rax)
  40038c:	00 00                	add    %al,(%rax)
  40038e:	00 00                	add    %al,(%rax)
  400390:	75 1a                	jne    4003ac <_init-0x54>
  400392:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
  400398:	38 00                	cmp    %al,(%rax)
  40039a:	00 00                	add    %al,(%rax)
  40039c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000004003a0 <.rela.dyn>:
  4003a0:	f0 0f 60 00          	lock punpcklbw (%rax),%mm0
  4003a4:	00 00                	add    %al,(%rax)
  4003a6:	00 00                	add    %al,(%rax)
  4003a8:	06                   	(bad)  
  4003a9:	00 00                	add    %al,(%rax)
  4003ab:	00 03                	add    %al,(%rbx)
	...
  4003b5:	00 00                	add    %al,(%rax)
  4003b7:	00 f8                	add    %bh,%al
  4003b9:	0f 60 00             	punpcklbw (%rax),%mm0
  4003bc:	00 00                	add    %al,(%rax)
  4003be:	00 00                	add    %al,(%rax)
  4003c0:	06                   	(bad)  
  4003c1:	00 00                	add    %al,(%rax)
  4003c3:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .rela.plt:

00000000004003d0 <.rela.plt>:
  4003d0:	18 10                	sbb    %dl,(%rax)
  4003d2:	60                   	(bad)  
  4003d3:	00 00                	add    %al,(%rax)
  4003d5:	00 00                	add    %al,(%rax)
  4003d7:	00 07                	add    %al,(%rdi)
  4003d9:	00 00                	add    %al,(%rax)
  4003db:	00 01                	add    %al,(%rcx)
	...
  4003e5:	00 00                	add    %al,(%rax)
  4003e7:	00 20                	add    %ah,(%rax)
  4003e9:	10 60 00             	adc    %ah,0x0(%rax)
  4003ec:	00 00                	add    %al,(%rax)
  4003ee:	00 00                	add    %al,(%rax)
  4003f0:	07                   	(bad)  
  4003f1:	00 00                	add    %al,(%rax)
  4003f3:	00 02                	add    %al,(%rdx)
	...

Disassembly of section .init:

0000000000400400 <_init>:
  400400:	48 83 ec 08          	sub    $0x8,%rsp
  400404:	48 8b 05 ed 0b 20 00 	mov    0x200bed(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d8>
  40040b:	48 85 c0             	test   %rax,%rax
  40040e:	74 02                	je     400412 <_init+0x12>
  400410:	ff d0                	callq  *%rax
  400412:	48 83 c4 08          	add    $0x8,%rsp
  400416:	c3                   	retq   

Disassembly of section .plt:

0000000000400420 <puts@plt-0x10>:
  400420:	ff 35 e2 0b 20 00    	pushq  0x200be2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400426:	ff 25 e4 0b 20 00    	jmpq   *0x200be4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40042c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400430 <puts@plt>:
  400430:	ff 25 e2 0b 20 00    	jmpq   *0x200be2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400436:	68 00 00 00 00       	pushq  $0x0
  40043b:	e9 e0 ff ff ff       	jmpq   400420 <_init+0x20>

0000000000400440 <printf@plt>:
  400440:	ff 25 da 0b 20 00    	jmpq   *0x200bda(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400446:	68 01 00 00 00       	pushq  $0x1
  40044b:	e9 d0 ff ff ff       	jmpq   400420 <_init+0x20>

Disassembly of section .text:

0000000000400450 <_start>:
  400450:	31 ed                	xor    %ebp,%ebp
  400452:	49 89 d1             	mov    %rdx,%r9
  400455:	5e                   	pop    %rsi
  400456:	48 89 e2             	mov    %rsp,%rdx
  400459:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40045d:	50                   	push   %rax
  40045e:	54                   	push   %rsp
  40045f:	49 c7 c0 f0 05 40 00 	mov    $0x4005f0,%r8
  400466:	48 c7 c1 80 05 40 00 	mov    $0x400580,%rcx
  40046d:	48 c7 c7 46 05 40 00 	mov    $0x400546,%rdi
  400474:	ff 15 76 0b 20 00    	callq  *0x200b76(%rip)        # 600ff0 <_DYNAMIC+0x1d0>
  40047a:	f4                   	hlt    
  40047b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400480 <deregister_tm_clones>:
  400480:	b8 47 10 60 00       	mov    $0x601047,%eax
  400485:	55                   	push   %rbp
  400486:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  40048c:	48 83 f8 0e          	cmp    $0xe,%rax
  400490:	48 89 e5             	mov    %rsp,%rbp
  400493:	76 1b                	jbe    4004b0 <deregister_tm_clones+0x30>
  400495:	b8 00 00 00 00       	mov    $0x0,%eax
  40049a:	48 85 c0             	test   %rax,%rax
  40049d:	74 11                	je     4004b0 <deregister_tm_clones+0x30>
  40049f:	5d                   	pop    %rbp
  4004a0:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004a5:	ff e0                	jmpq   *%rax
  4004a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4004ae:	00 00 
  4004b0:	5d                   	pop    %rbp
  4004b1:	c3                   	retq   
  4004b2:	0f 1f 40 00          	nopl   0x0(%rax)
  4004b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4004bd:	00 00 00 

00000000004004c0 <register_tm_clones>:
  4004c0:	be 40 10 60 00       	mov    $0x601040,%esi
  4004c5:	55                   	push   %rbp
  4004c6:	48 81 ee 40 10 60 00 	sub    $0x601040,%rsi
  4004cd:	48 c1 fe 03          	sar    $0x3,%rsi
  4004d1:	48 89 e5             	mov    %rsp,%rbp
  4004d4:	48 89 f0             	mov    %rsi,%rax
  4004d7:	48 c1 e8 3f          	shr    $0x3f,%rax
  4004db:	48 01 c6             	add    %rax,%rsi
  4004de:	48 d1 fe             	sar    %rsi
  4004e1:	74 15                	je     4004f8 <register_tm_clones+0x38>
  4004e3:	b8 00 00 00 00       	mov    $0x0,%eax
  4004e8:	48 85 c0             	test   %rax,%rax
  4004eb:	74 0b                	je     4004f8 <register_tm_clones+0x38>
  4004ed:	5d                   	pop    %rbp
  4004ee:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004f3:	ff e0                	jmpq   *%rax
  4004f5:	0f 1f 00             	nopl   (%rax)
  4004f8:	5d                   	pop    %rbp
  4004f9:	c3                   	retq   
  4004fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400500 <__do_global_dtors_aux>:
  400500:	80 3d 39 0b 20 00 00 	cmpb   $0x0,0x200b39(%rip)        # 601040 <__TMC_END__>
  400507:	75 11                	jne    40051a <__do_global_dtors_aux+0x1a>
  400509:	55                   	push   %rbp
  40050a:	48 89 e5             	mov    %rsp,%rbp
  40050d:	e8 6e ff ff ff       	callq  400480 <deregister_tm_clones>
  400512:	5d                   	pop    %rbp
  400513:	c6 05 26 0b 20 00 01 	movb   $0x1,0x200b26(%rip)        # 601040 <__TMC_END__>
  40051a:	f3 c3                	repz retq 
  40051c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400520 <frame_dummy>:
  400520:	bf 18 0e 60 00       	mov    $0x600e18,%edi
  400525:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400529:	75 05                	jne    400530 <frame_dummy+0x10>
  40052b:	eb 93                	jmp    4004c0 <register_tm_clones>
  40052d:	0f 1f 00             	nopl   (%rax)
  400530:	b8 00 00 00 00       	mov    $0x0,%eax
  400535:	48 85 c0             	test   %rax,%rax
  400538:	74 f1                	je     40052b <frame_dummy+0xb>
  40053a:	55                   	push   %rbp
  40053b:	48 89 e5             	mov    %rsp,%rbp
  40053e:	ff d0                	callq  *%rax
  400540:	5d                   	pop    %rbp
  400541:	e9 7a ff ff ff       	jmpq   4004c0 <register_tm_clones>

0000000000400546 <main>:
  400546:	55                   	push   %rbp
  400547:	48 89 e5             	mov    %rsp,%rbp
  40054a:	48 83 ec 10          	sub    $0x10,%rsp
  40054e:	bf 04 06 40 00       	mov    $0x400604,%edi
  400553:	e8 d8 fe ff ff       	callq  400430 <puts@plt>
  400558:	48 8b 05 d9 0a 20 00 	mov    0x200ad9(%rip),%rax        # 601038 <A>
  40055f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400563:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  400568:	bf 10 06 40 00       	mov    $0x400610,%edi
  40056d:	b8 01 00 00 00       	mov    $0x1,%eax
  400572:	e8 c9 fe ff ff       	callq  400440 <printf@plt>
  400577:	90                   	nop
  400578:	90                   	nop
  400579:	c9                   	leaveq 
  40057a:	c3                   	retq   
  40057b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000400580 <__libc_csu_init>:
  400580:	41 57                	push   %r15
  400582:	41 56                	push   %r14
  400584:	41 89 ff             	mov    %edi,%r15d
  400587:	41 55                	push   %r13
  400589:	41 54                	push   %r12
  40058b:	4c 8d 25 76 08 20 00 	lea    0x200876(%rip),%r12        # 600e08 <__frame_dummy_init_array_entry>
  400592:	55                   	push   %rbp
  400593:	48 8d 2d 76 08 20 00 	lea    0x200876(%rip),%rbp        # 600e10 <__init_array_end>
  40059a:	53                   	push   %rbx
  40059b:	49 89 f6             	mov    %rsi,%r14
  40059e:	49 89 d5             	mov    %rdx,%r13
  4005a1:	4c 29 e5             	sub    %r12,%rbp
  4005a4:	48 83 ec 08          	sub    $0x8,%rsp
  4005a8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005ac:	e8 4f fe ff ff       	callq  400400 <_init>
  4005b1:	48 85 ed             	test   %rbp,%rbp
  4005b4:	74 20                	je     4005d6 <__libc_csu_init+0x56>
  4005b6:	31 db                	xor    %ebx,%ebx
  4005b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005bf:	00 
  4005c0:	4c 89 ea             	mov    %r13,%rdx
  4005c3:	4c 89 f6             	mov    %r14,%rsi
  4005c6:	44 89 ff             	mov    %r15d,%edi
  4005c9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005cd:	48 83 c3 01          	add    $0x1,%rbx
  4005d1:	48 39 dd             	cmp    %rbx,%rbp
  4005d4:	75 ea                	jne    4005c0 <__libc_csu_init+0x40>
  4005d6:	48 83 c4 08          	add    $0x8,%rsp
  4005da:	5b                   	pop    %rbx
  4005db:	5d                   	pop    %rbp
  4005dc:	41 5c                	pop    %r12
  4005de:	41 5d                	pop    %r13
  4005e0:	41 5e                	pop    %r14
  4005e2:	41 5f                	pop    %r15
  4005e4:	c3                   	retq   
  4005e5:	90                   	nop
  4005e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4005ed:	00 00 00 

00000000004005f0 <__libc_csu_fini>:
  4005f0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004005f4 <_fini>:
  4005f4:	48 83 ec 08          	sub    $0x8,%rsp
  4005f8:	48 83 c4 08          	add    $0x8,%rsp
  4005fc:	c3                   	retq   

Disassembly of section .rodata:

0000000000400600 <_IO_stdin_used>:
  400600:	01 00                	add    %eax,(%rax)
  400602:	02 00                	add    (%rax),%al
  400604:	68 65 6c 6c 6f       	pushq  $0x6f6c6c65
  400609:	20 77 6f             	and    %dh,0x6f(%rdi)
  40060c:	72 6c                	jb     40067a <__GNU_EH_FRAME_HDR+0x66>
  40060e:	64                   	fs
  40060f:	00                   	.byte 0x0
  400610:	25                   	.byte 0x25
  400611:	69                   	.byte 0x69
  400612:	0a 00                	or     (%rax),%al

Disassembly of section .eh_frame_hdr:

0000000000400614 <__GNU_EH_FRAME_HDR>:
  400614:	01 1b                	add    %ebx,(%rbx)
  400616:	03 3b                	add    (%rbx),%edi
  400618:	30 00                	xor    %al,(%rax)
  40061a:	00 00                	add    %al,(%rax)
  40061c:	05 00 00 00 0c       	add    $0xc000000,%eax
  400621:	fe                   	(bad)  
  400622:	ff                   	(bad)  
  400623:	ff                   	(bad)  
  400624:	7c 00                	jl     400626 <__GNU_EH_FRAME_HDR+0x12>
  400626:	00 00                	add    %al,(%rax)
  400628:	3c fe                	cmp    $0xfe,%al
  40062a:	ff                   	(bad)  
  40062b:	ff 4c 00 00          	decl   0x0(%rax,%rax,1)
  40062f:	00 32                	add    %dh,(%rdx)
  400631:	ff                   	(bad)  
  400632:	ff                   	(bad)  
  400633:	ff a4 00 00 00 6c ff 	jmpq   *-0x940000(%rax,%rax,1)
  40063a:	ff                   	(bad)  
  40063b:	ff c4                	inc    %esp
  40063d:	00 00                	add    %al,(%rax)
  40063f:	00 dc                	add    %bl,%ah
  400641:	ff                   	(bad)  
  400642:	ff                   	(bad)  
  400643:	ff 0c 01             	decl   (%rcx,%rax,1)
	...

Disassembly of section .eh_frame:

0000000000400648 <__FRAME_END__-0xf0>:
  400648:	14 00                	adc    $0x0,%al
  40064a:	00 00                	add    %al,(%rax)
  40064c:	00 00                	add    %al,(%rax)
  40064e:	00 00                	add    %al,(%rax)
  400650:	01 7a 52             	add    %edi,0x52(%rdx)
  400653:	00 01                	add    %al,(%rcx)
  400655:	78 10                	js     400667 <__GNU_EH_FRAME_HDR+0x53>
  400657:	01 1b                	add    %ebx,(%rbx)
  400659:	0c 07                	or     $0x7,%al
  40065b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
  400661:	00 00                	add    %al,(%rax)
  400663:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400666:	00 00                	add    %al,(%rax)
  400668:	e8 fd ff ff 2b       	callq  2c40066a <_end+0x2bdff61a>
	...
  400675:	00 00                	add    %al,(%rax)
  400677:	00 14 00             	add    %dl,(%rax,%rax,1)
  40067a:	00 00                	add    %al,(%rax)
  40067c:	00 00                	add    %al,(%rax)
  40067e:	00 00                	add    %al,(%rax)
  400680:	01 7a 52             	add    %edi,0x52(%rdx)
  400683:	00 01                	add    %al,(%rcx)
  400685:	78 10                	js     400697 <__GNU_EH_FRAME_HDR+0x83>
  400687:	01 1b                	add    %ebx,(%rbx)
  400689:	0c 07                	or     $0x7,%al
  40068b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
  400691:	00 00                	add    %al,(%rax)
  400693:	00 1c 00             	add    %bl,(%rax,%rax,1)
  400696:	00 00                	add    %al,(%rax)
  400698:	88 fd                	mov    %bh,%ch
  40069a:	ff                   	(bad)  
  40069b:	ff 30                	pushq  (%rax)
  40069d:	00 00                	add    %al,(%rax)
  40069f:	00 00                	add    %al,(%rax)
  4006a1:	0e                   	(bad)  
  4006a2:	10 46 0e             	adc    %al,0xe(%rsi)
  4006a5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
  4006a8:	0b 77 08             	or     0x8(%rdi),%esi
  4006ab:	80 00 3f             	addb   $0x3f,(%rax)
  4006ae:	1a 3b                	sbb    (%rbx),%bh
  4006b0:	2a 33                	sub    (%rbx),%dh
  4006b2:	24 22                	and    $0x22,%al
  4006b4:	00 00                	add    %al,(%rax)
  4006b6:	00 00                	add    %al,(%rax)
  4006b8:	1c 00                	sbb    $0x0,%al
  4006ba:	00 00                	add    %al,(%rax)
  4006bc:	44 00 00             	add    %r8b,(%rax)
  4006bf:	00 86 fe ff ff 35    	add    %al,0x35fffffe(%rsi)
  4006c5:	00 00                	add    %al,(%rax)
  4006c7:	00 00                	add    %al,(%rax)
  4006c9:	41 0e                	rex.B (bad) 
  4006cb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
  4006d1:	70 0c                	jo     4006df <__GNU_EH_FRAME_HDR+0xcb>
  4006d3:	07                   	(bad)  
  4006d4:	08 00                	or     %al,(%rax)
  4006d6:	00 00                	add    %al,(%rax)
  4006d8:	44 00 00             	add    %r8b,(%rax)
  4006db:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
  4006df:	00 a0 fe ff ff 65    	add    %ah,0x65fffffe(%rax)
  4006e5:	00 00                	add    %al,(%rax)
  4006e7:	00 00                	add    %al,(%rax)
  4006e9:	42 0e                	rex.X (bad) 
  4006eb:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
  4006f1:	8e 03                	mov    (%rbx),%es
  4006f3:	45 0e                	rex.RB (bad) 
  4006f5:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
  4006fb:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86701549 <_end+0xffffffff861004f9>
  400701:	06                   	(bad)  
  400702:	48 0e                	rex.W (bad) 
  400704:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
  40070a:	72 0e                	jb     40071a <__GNU_EH_FRAME_HDR+0x106>
  40070c:	38 41 0e             	cmp    %al,0xe(%rcx)
  40070f:	30 41 0e             	xor    %al,0xe(%rcx)
  400712:	28 42 0e             	sub    %al,0xe(%rdx)
  400715:	20 42 0e             	and    %al,0xe(%rdx)
  400718:	18 42 0e             	sbb    %al,0xe(%rdx)
  40071b:	10 42 0e             	adc    %al,0xe(%rdx)
  40071e:	08 00                	or     %al,(%rax)
  400720:	14 00                	adc    $0x0,%al
  400722:	00 00                	add    %al,(%rax)
  400724:	ac                   	lods   %ds:(%rsi),%al
  400725:	00 00                	add    %al,(%rax)
  400727:	00 c8                	add    %cl,%al
  400729:	fe                   	(bad)  
  40072a:	ff                   	(bad)  
  40072b:	ff 02                	incl   (%rdx)
	...

0000000000400738 <__FRAME_END__>:
  400738:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000600e08 <__frame_dummy_init_array_entry>:
  600e08:	20 05 40 00 00 00    	and    %al,0x40(%rip)        # 600e4e <_DYNAMIC+0x2e>
	...

Disassembly of section .fini_array:

0000000000600e10 <__do_global_dtors_aux_fini_array_entry>:
  600e10:	00 05 40 00 00 00    	add    %al,0x40(%rip)        # 600e56 <_DYNAMIC+0x36>
	...

Disassembly of section .jcr:

0000000000600e18 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000600e20 <_DYNAMIC>:
  600e20:	01 00                	add    %eax,(%rax)
  600e22:	00 00                	add    %al,(%rax)
  600e24:	00 00                	add    %al,(%rax)
  600e26:	00 00                	add    %al,(%rax)
  600e28:	01 00                	add    %eax,(%rax)
  600e2a:	00 00                	add    %al,(%rax)
  600e2c:	00 00                	add    %al,(%rax)
  600e2e:	00 00                	add    %al,(%rax)
  600e30:	0c 00                	or     $0x0,%al
  600e32:	00 00                	add    %al,(%rax)
  600e34:	00 00                	add    %al,(%rax)
  600e36:	00 00                	add    %al,(%rax)
  600e38:	00 04 40             	add    %al,(%rax,%rax,2)
  600e3b:	00 00                	add    %al,(%rax)
  600e3d:	00 00                	add    %al,(%rax)
  600e3f:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 600e45 <_DYNAMIC+0x25>
  600e45:	00 00                	add    %al,(%rax)
  600e47:	00 f4                	add    %dh,%ah
  600e49:	05 40 00 00 00       	add    $0x40,%eax
  600e4e:	00 00                	add    %al,(%rax)
  600e50:	19 00                	sbb    %eax,(%rax)
  600e52:	00 00                	add    %al,(%rax)
  600e54:	00 00                	add    %al,(%rax)
  600e56:	00 00                	add    %al,(%rax)
  600e58:	08 0e                	or     %cl,(%rsi)
  600e5a:	60                   	(bad)  
  600e5b:	00 00                	add    %al,(%rax)
  600e5d:	00 00                	add    %al,(%rax)
  600e5f:	00 1b                	add    %bl,(%rbx)
  600e61:	00 00                	add    %al,(%rax)
  600e63:	00 00                	add    %al,(%rax)
  600e65:	00 00                	add    %al,(%rax)
  600e67:	00 08                	add    %cl,(%rax)
  600e69:	00 00                	add    %al,(%rax)
  600e6b:	00 00                	add    %al,(%rax)
  600e6d:	00 00                	add    %al,(%rax)
  600e6f:	00 1a                	add    %bl,(%rdx)
  600e71:	00 00                	add    %al,(%rax)
  600e73:	00 00                	add    %al,(%rax)
  600e75:	00 00                	add    %al,(%rax)
  600e77:	00 10                	add    %dl,(%rax)
  600e79:	0e                   	(bad)  
  600e7a:	60                   	(bad)  
  600e7b:	00 00                	add    %al,(%rax)
  600e7d:	00 00                	add    %al,(%rax)
  600e7f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  600e82:	00 00                	add    %al,(%rax)
  600e84:	00 00                	add    %al,(%rax)
  600e86:	00 00                	add    %al,(%rax)
  600e88:	08 00                	or     %al,(%rax)
  600e8a:	00 00                	add    %al,(%rax)
  600e8c:	00 00                	add    %al,(%rax)
  600e8e:	00 00                	add    %al,(%rax)
  600e90:	f5                   	cmc    
  600e91:	fe                   	(bad)  
  600e92:	ff 6f 00             	ljmp   *0x0(%rdi)
  600e95:	00 00                	add    %al,(%rax)
  600e97:	00 98 02 40 00 00    	add    %bl,0x4002(%rax)
  600e9d:	00 00                	add    %al,(%rax)
  600e9f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 600ea5 <_DYNAMIC+0x85>
  600ea5:	00 00                	add    %al,(%rax)
  600ea7:	00 30                	add    %dh,(%rax)
  600ea9:	03 40 00             	add    0x0(%rax),%eax
  600eac:	00 00                	add    %al,(%rax)
  600eae:	00 00                	add    %al,(%rax)
  600eb0:	06                   	(bad)  
  600eb1:	00 00                	add    %al,(%rax)
  600eb3:	00 00                	add    %al,(%rax)
  600eb5:	00 00                	add    %al,(%rax)
  600eb7:	00 b8 02 40 00 00    	add    %bh,0x4002(%rax)
  600ebd:	00 00                	add    %al,(%rax)
  600ebf:	00 0a                	add    %cl,(%rdx)
  600ec1:	00 00                	add    %al,(%rax)
  600ec3:	00 00                	add    %al,(%rax)
  600ec5:	00 00                	add    %al,(%rax)
  600ec7:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
  600ecb:	00 00                	add    %al,(%rax)
  600ecd:	00 00                	add    %al,(%rax)
  600ecf:	00 0b                	add    %cl,(%rbx)
  600ed1:	00 00                	add    %al,(%rax)
  600ed3:	00 00                	add    %al,(%rax)
  600ed5:	00 00                	add    %al,(%rax)
  600ed7:	00 18                	add    %bl,(%rax)
  600ed9:	00 00                	add    %al,(%rax)
  600edb:	00 00                	add    %al,(%rax)
  600edd:	00 00                	add    %al,(%rax)
  600edf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 600ee5 <_DYNAMIC+0xc5>
	...
  600eed:	00 00                	add    %al,(%rax)
  600eef:	00 03                	add    %al,(%rbx)
	...
  600ef9:	10 60 00             	adc    %ah,0x0(%rax)
  600efc:	00 00                	add    %al,(%rax)
  600efe:	00 00                	add    %al,(%rax)
  600f00:	02 00                	add    (%rax),%al
  600f02:	00 00                	add    %al,(%rax)
  600f04:	00 00                	add    %al,(%rax)
  600f06:	00 00                	add    %al,(%rax)
  600f08:	30 00                	xor    %al,(%rax)
  600f0a:	00 00                	add    %al,(%rax)
  600f0c:	00 00                	add    %al,(%rax)
  600f0e:	00 00                	add    %al,(%rax)
  600f10:	14 00                	adc    $0x0,%al
  600f12:	00 00                	add    %al,(%rax)
  600f14:	00 00                	add    %al,(%rax)
  600f16:	00 00                	add    %al,(%rax)
  600f18:	07                   	(bad)  
  600f19:	00 00                	add    %al,(%rax)
  600f1b:	00 00                	add    %al,(%rax)
  600f1d:	00 00                	add    %al,(%rax)
  600f1f:	00 17                	add    %dl,(%rdi)
  600f21:	00 00                	add    %al,(%rax)
  600f23:	00 00                	add    %al,(%rax)
  600f25:	00 00                	add    %al,(%rax)
  600f27:	00 d0                	add    %dl,%al
  600f29:	03 40 00             	add    0x0(%rax),%eax
  600f2c:	00 00                	add    %al,(%rax)
  600f2e:	00 00                	add    %al,(%rax)
  600f30:	07                   	(bad)  
  600f31:	00 00                	add    %al,(%rax)
  600f33:	00 00                	add    %al,(%rax)
  600f35:	00 00                	add    %al,(%rax)
  600f37:	00 a0 03 40 00 00    	add    %ah,0x4003(%rax)
  600f3d:	00 00                	add    %al,(%rax)
  600f3f:	00 08                	add    %cl,(%rax)
  600f41:	00 00                	add    %al,(%rax)
  600f43:	00 00                	add    %al,(%rax)
  600f45:	00 00                	add    %al,(%rax)
  600f47:	00 30                	add    %dh,(%rax)
  600f49:	00 00                	add    %al,(%rax)
  600f4b:	00 00                	add    %al,(%rax)
  600f4d:	00 00                	add    %al,(%rax)
  600f4f:	00 09                	add    %cl,(%rcx)
  600f51:	00 00                	add    %al,(%rax)
  600f53:	00 00                	add    %al,(%rax)
  600f55:	00 00                	add    %al,(%rax)
  600f57:	00 18                	add    %bl,(%rax)
  600f59:	00 00                	add    %al,(%rax)
  600f5b:	00 00                	add    %al,(%rax)
  600f5d:	00 00                	add    %al,(%rax)
  600f5f:	00 fe                	add    %bh,%dh
  600f61:	ff                   	(bad)  
  600f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f65:	00 00                	add    %al,(%rax)
  600f67:	00 80 03 40 00 00    	add    %al,0x4003(%rax)
  600f6d:	00 00                	add    %al,(%rax)
  600f6f:	00 ff                	add    %bh,%bh
  600f71:	ff                   	(bad)  
  600f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f75:	00 00                	add    %al,(%rax)
  600f77:	00 01                	add    %al,(%rcx)
  600f79:	00 00                	add    %al,(%rax)
  600f7b:	00 00                	add    %al,(%rax)
  600f7d:	00 00                	add    %al,(%rax)
  600f7f:	00 f0                	add    %dh,%al
  600f81:	ff                   	(bad)  
  600f82:	ff 6f 00             	ljmp   *0x0(%rdi)
  600f85:	00 00                	add    %al,(%rax)
  600f87:	00 74 03 40          	add    %dh,0x40(%rbx,%rax,1)
	...

Disassembly of section .got:

0000000000600ff0 <.got>:
	...

Disassembly of section .got.plt:

0000000000601000 <_GLOBAL_OFFSET_TABLE_>:
  601000:	20 0e                	and    %cl,(%rsi)
  601002:	60                   	(bad)  
	...
  601017:	00 36                	add    %dh,(%rsi)
  601019:	04 40                	add    $0x40,%al
  60101b:	00 00                	add    %al,(%rax)
  60101d:	00 00                	add    %al,(%rax)
  60101f:	00 46 04             	add    %al,0x4(%rsi)
  601022:	40 00 00             	add    %al,(%rax)
  601025:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000601028 <__data_start>:
	...

0000000000601030 <__dso_handle>:
	...

0000000000601038 <A>:
  601038:	00 00                	add    %al,(%rax)
  60103a:	00 00                	add    %al,(%rax)
  60103c:	00 00                	add    %al,(%rax)
  60103e:	14 40                	adc    $0x40,%al

Disassembly of section .bss:

0000000000601040 <__bss_start>:
	...

0000000000601048 <c>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	36 2e 31 2e          	ss xor %ebp,%cs:(%rsi)
   f:	31 20                	xor    %esp,(%rax)
  11:	32 30                	xor    (%rax),%dh
  13:	31 36                	xor    %esi,(%rsi)
  15:	30 38                	xor    %bh,(%rax)
  17:	30 32                	xor    %dh,(%rdx)
	...
